'use client';

import { useEffect } from 'react';
import { useTheme } from '@/context/ThemeContext';
import styles from './payment-action.module.css';
import { useLanguage } from '@/context/LanguageContext';
import { ComponentStateProps } from '@/hooks/use-component-state';
import { useNav } from "@/lib/NavigationStack";

export default function PaymentAction({ onStateChange }: ComponentStateProps) {
  const { theme } = useTheme();
  const { t } = useLanguage();
  const nav = useNav();
  const isTop = nav.isTop();

  useEffect(() => {
    onStateChange?.('data');
  }, []);

    const handleActionClick = (actionId: string) => {
      switch(actionId) {
        case 'topup':
          // Handle top up action
          nav.push('top_up');
          break;
        case 'withdraw':
          // Handle withdraw action
          nav.push('withdraw');
          break;
        case 'payments':
          // Handle payments action
          break;
        case 'statements':
          // Handle statements action
          break;
        default:
          break;
      }
    };

  const actions = [
    {
      id: 'topup',
      icon: (
        <svg fill="none" height="20" viewBox="0 0 20 20" width="20" xmlns="http://www.w3.org/2000/svg">
          <path
            d="M16.432 6.75L19.637 3.545C20 5.009 20 7.04 20 10C20 14.714 20 17.071 18.535 18.535C17.072 20 14.714 20 10 20C5.286 20 2.929 20 1.464 18.535C0 17.072 0 14.714 0 10C0 5.286 0 2.929 1.464 1.464C2.93 0 5.286 0 10 0C12.96 0 14.991 -8.9407e-08 16.455 0.363L13.25 3.568V3C13.25 2.40326 13.0129 1.83097 12.591 1.40901C12.169 0.987053 11.5967 0.75 11 0.75C10.4033 0.75 9.83097 0.987053 9.40901 1.40901C8.98705 1.83097 8.75 2.40326 8.75 3V9C8.75 9.59674 8.98705 10.169 9.40901 10.591C9.83097 11.0129 10.4033 11.25 11 11.25H17C17.5967 11.25 18.169 11.0129 18.591 10.591C19.0129 10.169 19.25 9.59674 19.25 9C19.25 8.40326 19.0129 7.83097 18.591 7.40901C18.169 6.98705 17.5967 6.75 17 6.75H16.432Z"
            fill="currentColor"
          />
          <path
            d="M17 9.75003C17.1989 9.75003 17.3897 9.67101 17.5303 9.53036C17.671 9.38971 17.75 9.19894 17.75 9.00003C17.75 8.80112 17.671 8.61035 17.5303 8.4697C17.3897 8.32905 17.1989 8.25003 17 8.25003H12.81L19.53 1.53003C19.6625 1.38785 19.7346 1.19981 19.7312 1.00551C19.7277 0.811206 19.649 0.625821 19.5116 0.488408C19.3742 0.350995 19.1888 0.272283 18.9945 0.268855C18.8002 0.265426 18.6122 0.33755 18.47 0.47003L11.75 7.19003V3.00003C11.75 2.80112 11.671 2.61035 11.5303 2.4697C11.3897 2.32905 11.1989 2.25003 11 2.25003C10.8011 2.25003 10.6103 2.32905 10.4697 2.4697C10.329 2.61035 10.25 2.80112 10.25 3.00003V9.00003C10.25 9.41403 10.586 9.75003 11 9.75003H17Z"
            fill="currentColor"
          />
        </svg>
      ),
      text: t('top_up_text')
    },
    {
      id: 'withdraw',
      icon: (
        <svg fill="none" height="22" viewBox="0 0 20 22" width="20" xmlns="http://www.w3.org/2000/svg">
          <path
            d="M8.69565 4.39999H6.95652V0.733332C6.95652 0.53884 7.04814 0.352314 7.21121 0.214788C7.37429 0.0772615 7.59546 0 7.82609 0C8.05671 0 8.27789 0.0772615 8.44096 0.214788C8.60404 0.352314 8.69565 0.53884 8.69565 0.733332V4.39999ZM15.6522 10.5985V5.86665C15.6522 5.47767 15.4689 5.10462 15.1428 4.82957C14.8166 4.55451 14.3743 4.39999 13.913 4.39999H8.69565V9.96323L10.6891 8.28115C10.7699 8.21301 10.8658 8.15897 10.9714 8.12209C11.077 8.08522 11.1901 8.06624 11.3043 8.06624C11.4186 8.06624 11.5317 8.08522 11.6373 8.12209C11.7429 8.15897 11.8388 8.21301 11.9196 8.28115C12.0004 8.34928 12.0644 8.43017 12.1082 8.51919C12.1519 8.60821 12.1744 8.70363 12.1744 8.79998C12.1744 8.89634 12.1519 8.99175 12.1082 9.08077C12.0644 9.16979 12.0004 9.25068 11.9196 9.31881L8.4413 12.2521C8.36055 12.3203 8.26464 12.3744 8.15908 12.4113C8.05351 12.4482 7.94036 12.4672 7.82609 12.4672C7.71181 12.4672 7.59866 12.4482 7.49309 12.4113C7.38753 12.3744 7.29163 12.3203 7.21087 12.2521L3.73261 9.31881C3.56944 9.18121 3.47778 8.99458 3.47778 8.79998C3.47778 8.60538 3.56944 8.41875 3.73261 8.28115C3.89577 8.14355 4.11707 8.06624 4.34783 8.06624C4.57858 8.06624 4.79988 8.14355 4.96304 8.28115L6.95652 9.96323V4.39999H1.73913C1.27788 4.39999 0.83553 4.55451 0.509379 4.82957C0.183229 5.10462 0 5.47767 0 5.86665V17.6C0 17.7945 0.0916148 17.981 0.25469 18.1185C0.417765 18.256 0.638942 18.3333 0.869565 18.3333H8.98913C9.02391 18.3947 9.06196 18.4561 9.10326 18.5166L9.12935 18.5515L11.5489 21.6681C11.6752 21.8309 11.8729 21.9447 12.0987 21.9845C12.3245 22.0243 12.5597 21.9868 12.7527 21.8803C12.9457 21.7738 13.0807 21.6071 13.1278 21.4167C13.175 21.2263 13.1306 21.0279 13.0043 20.8651L10.5989 17.7677C10.4284 17.5138 10.3845 17.2131 10.4768 16.9319C10.5692 16.6506 10.7902 16.4119 11.0913 16.268C11.3924 16.1242 11.7489 16.0872 12.0824 16.1651C12.4159 16.243 12.699 16.4294 12.8696 16.6833C12.8772 16.6952 12.8859 16.7071 12.8946 16.7181L14.0554 18.2132C14.158 18.3452 14.3084 18.4457 14.4842 18.4999C14.6599 18.554 14.8517 18.5589 15.0311 18.5138C15.2104 18.4688 15.3677 18.3761 15.4796 18.2496C15.5915 18.1231 15.652 17.9695 15.6522 17.8117V12.4666C16.4718 13.1065 17.1264 13.8818 17.5752 14.7443C18.024 15.6068 18.2574 16.538 18.2609 17.4799V21.2666C18.2609 21.4611 18.3525 21.6476 18.5156 21.7852C18.6786 21.9227 18.8998 22 19.1304 22C19.3611 22 19.5822 21.9227 19.7453 21.7852C19.9084 21.6476 20 21.4611 20 21.2666V17.4762C19.9951 16.1177 19.5963 14.7809 18.8385 13.5821C18.0807 12.3834 16.9868 11.3591 15.6522 10.5985Z"
            fill="currentColor"
          />
        </svg>
      ),
      text: t('withdraw_text')
    },
    {
      id: 'payments',
      icon: (
        <svg fill="none" height="14" viewBox="0 0 19 14" width="19" xmlns="http://www.w3.org/2000/svg">
            <path
                d="M3.26562 0C2.39953 0 1.5689 0.33802 0.956479 0.939699C0.344056 1.54138 0 2.35743 0 3.20833V4.66667H19V3.20833C19 2.35743 18.6559 1.54138 18.0435 0.939699C17.4311 0.33802 16.6005 0 15.7344 0H3.26562ZM19 5.83333H0V10.7917C0 11.6426 0.344056 12.4586 0.956479 13.0603C1.5689 13.662 2.39953 14 3.26562 14H15.7344C16.6005 14 17.4311 13.662 18.0435 13.0603C18.6559 12.4586 19 11.6426 19 10.7917V5.83333ZM13.6562 10.5H16.0312C16.1887 10.5 16.3397 10.5615 16.4511 10.6709C16.5624 10.7802 16.625 10.9286 16.625 11.0833C16.625 11.238 16.5624 11.3864 16.4511 11.4958C16.3397 11.6052 16.1887 11.6667 16.0312 11.6667H13.6562C13.4988 11.6667 13.3478 11.6052 13.2364 11.4958C13.1251 11.3864 13.0625 11.238 13.0625 11.0833C13.0625 10.9286 13.1251 10.7802 13.2364 10.6709C13.3478 10.5615 13.4988 10.5 13.6562 10.5Z"
                fill="currentColor" />
        </svg>
      ),
      text: t('payments_text')
    },
    {
      id: 'statements',
      icon: (
        <svg fill="none" height="17" viewBox="0 0 24 17" width="24" xmlns="http://www.w3.org/2000/svg">
          <path
            d="M11 5C11 7.21 9.21 9 7 9C4.79 9 3 7.21 3 5C3 2.79 4.79 1 7 1C9.21 1 11 2.79 11 5ZM11 11.72V17H0V15C0 12.79 3.13 11 7 11C8.5 11 9.87 11.27 11 11.72ZM24 17H13V0H24V17ZM16 8.5C16 7.83696 16.2634 7.20107 16.7322 6.73223C17.2011 6.26339 17.837 6 18.5 6C19.163 6 19.7989 6.26339 20.2678 6.73223C20.7366 7.20107 21 7.83696 21 8.5C21 9.16304 20.7366 9.79893 20.2678 10.2678C19.7989 10.7366 19.163 11 18.5 11C17.837 11 17.2011 10.7366 16.7322 10.2678C16.2634 9.79893 16 9.16304 16 8.5ZM22 4C21.4696 4 20.9609 3.78929 20.5858 3.41421C20.2107 3.03914 20 2.53043 20 2H17C17 3.11 16.11 4 15 4V13C15.5304 13 16.0391 13.2107 16.4142 13.5858C16.7893 13.9609 17 14.4696 17 15H20C20 13.9 20.9 13 22 13V4Z"
            fill="currentColor"
          />
        </svg>
      ),
      text: t('statements_text')
    }
  ];

  return (
    <div className={styles.experienceContainer}>
      <h2 className={`${styles.experienceTitle} ${styles[`experienceTitle_${theme}`]}`}>
        {t('actions_text')}
      </h2>

      <div className={styles.actionsGrid}>
        {actions.map((action) => (
          <button
            key={action.id}
            className={styles.actionItem}
            onClick={() => handleActionClick(action.id)}
          >
            <div className={`${styles.actionIcon} ${styles[`actionIcon_${theme}`]}`}>
              {action.icon}
            </div>
            <span className={`${styles.actionText} ${styles[`actionText_${theme}`]}`}>
              {action.text}
            </span>
          </button>
        ))}
      </div>
    </div>
  );
}